<?xml version="1.0"?>
<project name="stand-alone-release" default="update-build" basedir=".">

    <property name="workdir" value="workdir"/>

    <property name="srcdir" value="src"/>

    <property name="targetdir" value="target"/>
    <property name="distdir" value="${targetdir}/mongo-dist"/>
    <property name="bindir" value="${distdir}/bin"/>
    <property name="libdir" value="${distdir}/lib"/>
    <property name="jarsdir" value="${distdir}/jars"/>
    <property name="supportedtoolsdir" value="${distdir}/drivers_and_tools/supported"/>
    <property name="communitytoolsdir" value="${distdir}/drivers_and_tools/community"/>

    <!-- build time -->
    <tstamp>
      <format property="timenow" pattern="yyyyMMddHHmm" />
    </tstamp>


    <target name="clean">
        <delete failonerror="false" dir="${workdir}"/>
    </target>
    
    <target name="init">
        <mkdir dir="${workdir}"/>
    </target>

    <!--   PRIMARY TARGETS -->

    <target name="dist" depends="clean-build, make-dist" description="Clean build and packaging of Mongo distribution"/>
    <target name="clean-build" depends="clean, init, setup, build" description="Create a fresh checkout and build of mongo and dbshell"/>
    <target name="update-build" depends="update-code, build" description="After a clean-build, incrementally update code and re-build all"/>

    <!--   SEOONDARY TARGETS -->
    
    <target name="setup" depends="mongo-checkout, v8-checkout"/>
    <target name="build" depends="mongo-shell-build, mongo-build"/>
    <target name="update-code" depends="mongo-update, v8-update"/>

    <!-- ======================================================
            packaging targets
      ====================================================- -->

    <target name="make-dist" depends="dist-setup, dist-package"/>

    <target name="dist-setup">

        <delete failonerror="false" dir="${distdir}"/>
        <mkdir dir="${distdir}"/>
        <mkdir dir="${bindir}"/>
        <mkdir dir="${libdir}"/>
        <mkdir dir="${supportedtoolsdir}"/>
        <mkdir dir="${communitytoolsdir}"/>

        <!-- mongo and libs -->

        <copy file="${workdir}/mongo/db/db" tofile="${bindir}/mongod"/>
        <chmod file="${bindir}/mongod" perm="554"/>

        <copy todir="${libdir}">
           <fileset dir="${workdir}/mongo/lib/"/>
        </copy>

        <copy todir="${jarsdir}">
           <fileset dir="${workdir}/mongo/jars/"/>
        </copy>

        <!-- dbshell -->

        <copy file="${workdir}/mongo/dbshell" tofile="${bindir}/mongo"/>
        <chmod file="${bindir}/mongo" perm="554"/>

        <!-- notices and info -->
        <copy todir="${distdir}">
            <fileset dir="${srcdir}/resources"/>
        </copy>

        <!-- supported drivers and tools - be dumb for now -->

        <exec dir="${supportedtoolsdir}" executable="git">
           <arg value="clone"/>
           <arg value="git://github.com/mongodb/mongo-ruby-driver.git"/>
         </exec>

        <exec dir="${supportedtoolsdir}" executable="git">
           <arg value="clone"/>
           <arg value="git://github.com/mongodb/mongo-python-driver.git"/>
         </exec>

        <exec dir="${supportedtoolsdir}" executable="git">
           <arg value="clone"/>
           <arg value="git://github.com/mongodb/mongo-java-driver.git"/>
         </exec>

        <exec dir="${supportedtoolsdir}/mongo-java-driver" executable="ant">
           <arg value="jar"/>
        </exec>

        <!-- community drivers and tools - be dumb for now -->

        <exec dir="${communitytoolsdir}" executable="git">
           <arg value="clone"/>
           <arg value="git://github.com/geir/mongo-java-driver.git"/>
         </exec>

        <exec dir="${communitytoolsdir}/mongo-java-driver" executable="ant"/>

        <exec dir="${communitytoolsdir}" executable="git">
           <arg value="clone"/>
           <arg value="git://github.com/geir/mongo-message-monitor.git"/>
         </exec>

        <exec dir="${communitytoolsdir}/mongo-message-monitor" executable="ant"/>

    </target>

    <target name="dist-package">
        <tar tarfile="${targetdir}/mongo-${timenow}.tar.gz" longfile="gnu" compression="gzip">

            <tarfileset mode="754" dir="${targetdir}">
                <include name="mongo-dist/bin/**"/>
            </tarfileset>

            <tarfileset  dir="${targetdir}">
                <include name="mongo-dist/**"/>
                <exclude name="mongo-dist/bin/**"/>
            </tarfileset>

            </tar>
    </target>
    <!-- ======================================================
            mongo targets
      ====================================================- -->

    <target name="mongo-build">
        <exec dir="${workdir}/mongo" executable="scons"/>
    </target>

    <target name="mongo-clientlibrary-build" >
        <exec dir="${workdir}/mongo" executable="scons">
            <arg value="libmongoclient.a"/>
        </exec>
    </target>
    
    <target name="mongo-shell-build" depends="v8-lib-build">
        <exec dir="${workdir}/mongo" executable="scons">
            <arg value="dbshell"/>
        </exec>
    </target>

    <target name="mongo-tests-build" >
        <exec dir="${workdir}/mongo" executable="scons">
            <arg value="test"/>
        </exec>
    </target>

    <target name="mongo-checkout">
        <exec dir="${workdir}" executable="git">
          <arg value="clone"/>
          <arg value="git://github.com/mongodb/mongo.git"/>
        </exec>
    </target>

    <target name="mongo-update">
        <exec dir="${workdir}/mongo" executable="git">
          <arg value="pull"/>
        </exec>
    </target>

    <target name="mongo-run-tests" depends="mongo-tests-build" >
        <mkdir dir="/tmp/unittest/"/>
        <exec executable="${workdir}/mongo/test"/>
    </target>


    <!-- ======================================================
            V8 targets
      ====================================================- -->

    <target name="v8-lib-build">
        <exec dir="${workdir}/v8" executable="scons">
            <arg value="libv8.a"/>
        </exec>
    </target>

    <target name="v8-checkout">
        <exec dir="${workdir}" executable="svn">
          <arg value="checkout"/>
          <arg value="http://v8.googlecode.com/svn/trunk/"/>
          <arg value="v8"/>
        </exec>
    </target>

    <target name="v8-update">
        <exec dir="${workdir}/v8" executable="svn">
          <arg value="update"/>
        </exec>
    </target>


    <!-- ========================================================
           python driver and tools
    =========================================================== -->

    <!-- ========================================================
           ruby driver and tools
    =========================================================== -->

    <!-- ========================================================
           java driver and tools
    =========================================================== -->

</project>